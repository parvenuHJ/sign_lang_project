-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- tb_user Table Create SQL
-- 테이블 생성 SQL - tb_user
CREATE TABLE tb_user
(
    `user_email`  VARCHAR(30)    NOT NULL    COMMENT '회원 이메일', 
    `user_pw`     VARCHAR(30)    NOT NULL    COMMENT '회원 비밀번호', 
    `user_nick`   VARCHAR(20)    NOT NULL    COMMENT '회원 닉네임', 
    `joined_at`   DATETIME       NOT NULL    COMMENT '회원 가입일자', 
     PRIMARY KEY (user_email)
);

-- 테이블 Comment 설정 SQL - tb_user
ALTER TABLE tb_user COMMENT '회원';


-- tb_board Table Create SQL
-- 테이블 생성 SQL - tb_board
CREATE TABLE tb_board
(
    `bd_idx`       INT UNSIGNED     NOT NULL    AUTO_INCREMENT COMMENT '글 번호', 
    `bd_category`  VARCHAR(30)      NOT NULL    COMMENT '글 카테고리', 
    `bd_title`     VARCHAR(1200)    NOT NULL    COMMENT '글 제목', 
    `bd_content`   TEXT             NOT NULL    COMMENT '글 내용', 
    `bd_file`      VARCHAR(1200)    NOT NULL    COMMENT '글 첨부파일', 
    `bd_views`     INT              NOT NULL    COMMENT '글 조회수', 
    `bd_likes`     INT              NOT NULL    COMMENT '글 좋아요수', 
    `user_email`   VARCHAR(30)      NOT NULL    COMMENT '글 작성자', 
    `created_at`   DATETIME         NOT NULL    COMMENT '글 작성일자', 
     PRIMARY KEY (bd_idx)
);

-- 테이블 Comment 설정 SQL - tb_board
ALTER TABLE tb_board COMMENT '게시판';

-- Foreign Key 설정 SQL - tb_board(user_email) -> tb_user(user_email)
ALTER TABLE tb_board
    ADD CONSTRAINT FK_tb_board_user_email_tb_user_user_email FOREIGN KEY (user_email)
        REFERENCES tb_user (user_email) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - tb_board(user_email)
-- ALTER TABLE tb_board
-- DROP FOREIGN KEY FK_tb_board_user_email_tb_user_user_email;


-- tb_file Table Create SQL
-- 테이블 생성 SQL - tb_file
CREATE TABLE tb_file
(
    `file_idx`         INT UNSIGNED     NOT NULL    AUTO_INCREMENT COMMENT '파일 번호', 
    `bd_idx`           INT UNSIGNED     NOT NULL    COMMENT '글 번호', 
    `file_name`        VARCHAR(1000)    NOT NULL    COMMENT '파일 명', 
    `file_ori_name`    VARCHAR(1000)    NOT NULL    COMMENT '파일 원본명', 
    `file_thumb_name`  VARCHAR(1000)    NOT NULL    COMMENT '파일 썸네일', 
    `file_size`        INT              NOT NULL    COMMENT '파일 사이즈', 
    `file_ext`         VARCHAR(10)      NOT NULL    COMMENT '파일 확장자', 
    `uploaded_at`      DATETIME         NOT NULL    COMMENT '파일 업로드날짜', 
    `file_category`    VARCHAR(30)      NOT NULL    COMMENT '첨부파일 카테고리', 
     PRIMARY KEY (file_idx)
);

-- 테이블 Comment 설정 SQL - tb_file
ALTER TABLE tb_file COMMENT '첨부파일';

-- Foreign Key 설정 SQL - tb_file(bd_idx) -> tb_board(bd_idx)
ALTER TABLE tb_file
    ADD CONSTRAINT FK_tb_file_bd_idx_tb_board_bd_idx FOREIGN KEY (bd_idx)
        REFERENCES tb_board (bd_idx) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - tb_file(bd_idx)
-- ALTER TABLE tb_file
-- DROP FOREIGN KEY FK_tb_file_bd_idx_tb_board_bd_idx;


-- tb_comment Table Create SQL
-- 테이블 생성 SQL - tb_comment
CREATE TABLE tb_comment
(
    `cmt_idx`      INT UNSIGNED    NOT NULL    AUTO_INCREMENT COMMENT '댓글 번호', 
    `bd_idx`       INT UNSIGNED    NOT NULL    COMMENT '원글 번호', 
    `cmt_content`  TEXT            NOT NULL    COMMENT '댓글 내용', 
    `created_at`   DATETIME        NOT NULL    COMMENT '댓글 작성일자', 
    `user_email`   VARCHAR(30)     NOT NULL    COMMENT '댓글 작성자', 
    `cmt_likes`    INT             NOT NULL    COMMENT '댓글 좋아요수', 
     PRIMARY KEY (cmt_idx)
);

-- 테이블 Comment 설정 SQL - tb_comment
ALTER TABLE tb_comment COMMENT '댓글';

-- Foreign Key 설정 SQL - tb_comment(bd_idx) -> tb_board(bd_idx)
ALTER TABLE tb_comment
    ADD CONSTRAINT FK_tb_comment_bd_idx_tb_board_bd_idx FOREIGN KEY (bd_idx)
        REFERENCES tb_board (bd_idx) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - tb_comment(bd_idx)
-- ALTER TABLE tb_comment
-- DROP FOREIGN KEY FK_tb_comment_bd_idx_tb_board_bd_idx;

-- Foreign Key 설정 SQL - tb_comment(user_email) -> tb_user(user_email)
ALTER TABLE tb_comment
    ADD CONSTRAINT FK_tb_comment_user_email_tb_user_user_email FOREIGN KEY (user_email)
        REFERENCES tb_user (user_email) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - tb_comment(user_email)
-- ALTER TABLE tb_comment
-- DROP FOREIGN KEY FK_tb_comment_user_email_tb_user_user_email;


-- tb_likes Table Create SQL
-- 테이블 생성 SQL - tb_likes
CREATE TABLE tb_likes
(
    `like_idx`    INT UNSIGNED    NOT NULL    AUTO_INCREMENT COMMENT '좋아요 번호', 
    `bd_idx`      INT UNSIGNED    NOT NULL    COMMENT '글 번호', 
    `user_email`  VARCHAR(30)     NOT NULL    COMMENT '작성자 아이디', 
    `created_at`  DATETIME        NOT NULL    COMMENT '작성 일자', 
     PRIMARY KEY (like_idx)
);

-- 테이블 Comment 설정 SQL - tb_likes
ALTER TABLE tb_likes COMMENT '게시판 좋아요';

-- Foreign Key 설정 SQL - tb_likes(bd_idx) -> tb_board(bd_idx)
ALTER TABLE tb_likes
    ADD CONSTRAINT FK_tb_likes_bd_idx_tb_board_bd_idx FOREIGN KEY (bd_idx)
        REFERENCES tb_board (bd_idx) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - tb_likes(bd_idx)
-- ALTER TABLE tb_likes
-- DROP FOREIGN KEY FK_tb_likes_bd_idx_tb_board_bd_idx;

-- Foreign Key 설정 SQL - tb_likes(user_email) -> tb_user(user_email)
ALTER TABLE tb_likes
    ADD CONSTRAINT FK_tb_likes_user_email_tb_user_user_email FOREIGN KEY (user_email)
        REFERENCES tb_user (user_email) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - tb_likes(user_email)
-- ALTER TABLE tb_likes
-- DROP FOREIGN KEY FK_tb_likes_user_email_tb_user_user_email;


-- tb_signlang Table Create SQL
-- 테이블 생성 SQL - tb_signlang
CREATE TABLE tb_signlang
(
    `slang_idx`       INT UNSIGNED      NOT NULL    AUTO_INCREMENT COMMENT '수어 번호', 
    `slang_category`  VARCHAR(30)       NOT NULL    COMMENT '수어 카테고리', 
    `slang_text`      TEXT              NOT NULL    COMMENT '수어 텍스트', 
    `slang_video`     VARCHAR(1200 )    NOT NULL    COMMENT '수어 영상', 
     PRIMARY KEY (slang_idx)
);

-- 테이블 Comment 설정 SQL - tb_signlang
ALTER TABLE tb_signlang COMMENT '통합수어';


